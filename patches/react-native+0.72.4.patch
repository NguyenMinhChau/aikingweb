diff --git a/node_modules/react-native/Libraries/BatchedBridge/MessageQueue.js b/node_modules/react-native/Libraries/BatchedBridge/MessageQueue.js
index 932d309..9ed1432 100644
--- a/node_modules/react-native/Libraries/BatchedBridge/MessageQueue.js
+++ b/node_modules/react-native/Libraries/BatchedBridge/MessageQueue.js
@@ -167,23 +167,19 @@ class MessageQueue {
   callNativeSyncHook(
     moduleID: number,
     methodID: number,
-    params: mixed[],
-    onFail: ?(...mixed[]) => void,
-    onSucc: ?(...mixed[]) => void,
-  ): mixed {
-    if (__DEV__) {
-      invariant(
-        global.nativeCallSyncHook,
-        'Calling synchronous methods on native ' +
-          'modules is not supported in Chrome.\n\n Consider providing alternative ' +
-          'methods to expose this method in debug mode, e.g. by exposing constants ' +
-          'ahead-of-time.',
-      );
-    }
+    params: any[],
+    onFail: ?Function,
+    onSucc: ?Function,
+  ): any {
+    const isDebuggingEnabled = (typeof atob !== 'undefined');
     this.processCallbacks(moduleID, methodID, params, onFail, onSucc);
-    return global.nativeCallSyncHook(moduleID, methodID, params);
+    if(!isDebuggingEnabled)
+    {
+      return global.nativeCallSyncHook(moduleID, methodID, params);
+    }
   }
 
+
   processCallbacks(
     moduleID: number,
     methodID: number,
diff --git a/node_modules/react-native/index.js b/node_modules/react-native/index.js
index 7149c64..5b01075 100644
--- a/node_modules/react-native/index.js
+++ b/node_modules/react-native/index.js
@@ -379,45 +379,57 @@ module.exports = {
       );
   },
   // Deprecated Prop Types
+  // get ColorPropType(): $FlowFixMe {
+  //   console.error(
+  //     'ColorPropType will be removed from React Native, along with all ' +
+  //       'other PropTypes. We recommend that you migrate away from PropTypes ' +
+  //       'and switch to a type system like TypeScript. If you need to ' +
+  //       'continue using ColorPropType, migrate to the ' +
+  //       "'deprecated-react-native-prop-types' package.",
+  //   );
+  //   return require('deprecated-react-native-prop-types').ColorPropType;
+  // },
+  // get EdgeInsetsPropType(): $FlowFixMe {
+  //   console.error(
+  //     'EdgeInsetsPropType will be removed from React Native, along with all ' +
+  //       'other PropTypes. We recommend that you migrate away from PropTypes ' +
+  //       'and switch to a type system like TypeScript. If you need to ' +
+  //       'continue using EdgeInsetsPropType, migrate to the ' +
+  //       "'deprecated-react-native-prop-types' package.",
+  //   );
+  //   return require('deprecated-react-native-prop-types').EdgeInsetsPropType;
+  // },
+  // get PointPropType(): $FlowFixMe {
+  //   console.error(
+  //     'PointPropType will be removed from React Native, along with all ' +
+  //       'other PropTypes. We recommend that you migrate away from PropTypes ' +
+  //       'and switch to a type system like TypeScript. If you need to ' +
+  //       'continue using PointPropType, migrate to the ' +
+  //       "'deprecated-react-native-prop-types' package.",
+  //   );
+  //   return require('deprecated-react-native-prop-types').PointPropType;
+  // },
+  // get ViewPropTypes(): $FlowFixMe {
+  //   console.error(
+  //     'ViewPropTypes will be removed from React Native, along with all ' +
+  //       'other PropTypes. We recommend that you migrate away from PropTypes ' +
+  //       'and switch to a type system like TypeScript. If you need to ' +
+  //       'continue using ViewPropTypes, migrate to the ' +
+  //       "'deprecated-react-native-prop-types' package.",
+  //   );
+  //   return require('deprecated-react-native-prop-types').ViewPropTypes;
+  // },
   get ColorPropType(): $FlowFixMe {
-    console.error(
-      'ColorPropType will be removed from React Native, along with all ' +
-        'other PropTypes. We recommend that you migrate away from PropTypes ' +
-        'and switch to a type system like TypeScript. If you need to ' +
-        'continue using ColorPropType, migrate to the ' +
-        "'deprecated-react-native-prop-types' package.",
-    );
-    return require('deprecated-react-native-prop-types').ColorPropType;
+    return require('deprecated-react-native-prop-types').ColorPropType
   },
   get EdgeInsetsPropType(): $FlowFixMe {
-    console.error(
-      'EdgeInsetsPropType will be removed from React Native, along with all ' +
-        'other PropTypes. We recommend that you migrate away from PropTypes ' +
-        'and switch to a type system like TypeScript. If you need to ' +
-        'continue using EdgeInsetsPropType, migrate to the ' +
-        "'deprecated-react-native-prop-types' package.",
-    );
-    return require('deprecated-react-native-prop-types').EdgeInsetsPropType;
+    return require('deprecated-react-native-prop-types').EdgeInsetsPropType
   },
   get PointPropType(): $FlowFixMe {
-    console.error(
-      'PointPropType will be removed from React Native, along with all ' +
-        'other PropTypes. We recommend that you migrate away from PropTypes ' +
-        'and switch to a type system like TypeScript. If you need to ' +
-        'continue using PointPropType, migrate to the ' +
-        "'deprecated-react-native-prop-types' package.",
-    );
-    return require('deprecated-react-native-prop-types').PointPropType;
+    return require('deprecated-react-native-prop-types').PointPropType
   },
   get ViewPropTypes(): $FlowFixMe {
-    console.error(
-      'ViewPropTypes will be removed from React Native, along with all ' +
-        'other PropTypes. We recommend that you migrate away from PropTypes ' +
-        'and switch to a type system like TypeScript. If you need to ' +
-        'continue using ViewPropTypes, migrate to the ' +
-        "'deprecated-react-native-prop-types' package.",
-    );
-    return require('deprecated-react-native-prop-types').ViewPropTypes;
+    return require('deprecated-react-native-prop-types').ViewPropTypes
   },
 };
 
